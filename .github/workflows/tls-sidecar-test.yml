name: TLS Sidecar Workflow
env:
  AWS_REGION: us-east-1
  AWS_ECR_REPOSITORY: tls-sidecar
  AWS_ECR_DOCKER_IMAGE_TAG: 1.15.${{ github.run_number }}-${{ github.sha }}

  DOCKER_FILE: 'docker/tls-sidecar/Dockerfile'

  DH_DOCKER_IMAGE: stuartshay/azuredevopskats-selenium
  DOCKER_SCRIPT_PATH: docker/selenium

  DOCKER_IMAGE_TAG: v96.0-${{ github.sha }}
  DOCKER_IMAGE_PLATFORM: linux/amd64,linux/arm/v7
  BUILD_NUMBER: ${{ github.sha }}

on:
  workflow_dispatch:
  push:
    paths:
      - 'docker/tls-sidecar/**'

    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx create --name mybuilder --use
          docker buildx build -f ${{ env.DOCKER_FILE }} --platform linux/amd64 --load  \
               --build-arg BUILD_DATE=${{ steps.date.outputs.date }} \
               --build-arg BUILD_NUMBER=${{ env.BUILD_NUMBER }} \
               -t $ECR_REGISTRY/$ECR_REPOSITORY:$AWS_ECR_DOCKER_IMAGE_TAG  -t $ECR_REGISTRY/$ECR_REPOSITORY:lattest  .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$AWS_ECR_DOCKER_IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$AWS_ECR_DOCKER_IMAGE_TAG"
